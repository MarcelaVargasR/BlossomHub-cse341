{
  "openapi": "3.0.0",
  "info": {
    "title": "BlossomHub API",
    "version": "1.0.0",
    "description": "API for an online flower shop, managing inventory, categories, users, orders, and wishlists."
  },
  "servers": [
    {
      "url": "undefined/api",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Enter your JWT token here to access protected routes."
      }
    },
    "schemas": {
      "Flower": {
        "type": "object",
        "required": [
          "name",
          "price",
          "category",
          "stock"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Red Rose"
          },
          "description": {
            "type": "string",
            "example": "A beautiful vibrant red rose."
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 15.99
          },
          "category": {
            "type": "string",
            "example": "60d0fe4f5311236168a9b34b",
            "description": "Category ID"
          },
          "imageUrl": {
            "type": "string",
            "example": "https://example.com/red_rose.jpg"
          },
          "stock": {
            "type": "integer",
            "example": 100
          },
          "isFeatured": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "Category": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Roses"
          },
          "description": {
            "type": "string",
            "example": "Various types of roses."
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "displayName": {
            "type": "string",
            "example": "John Doe"
          },
          "profilePicture": {
            "type": "string",
            "example": "https://lh3.googleusercontent.com/a/image.jpg"
          },
          "isAdmin": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "Wishlist": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "example": "60d0fe4f5311236168a9b34a",
            "description": "User ID"
          },
          "flowers": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "60d0fe4f5311236168a9b34b"
            }
          }
        }
      },
      "Order": {
        "type": "object",
        "required": [
          "user",
          "items",
          "totalAmount",
          "shippingAddress"
        ],
        "properties": {
          "user": {
            "type": "string",
            "example": "60d0fe4f5311236168a9b34a",
            "description": "User ID"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "flower": {
                  "type": "string",
                  "example": "60d0fe4f5311236168a9b34b",
                  "description": "Flower ID"
                },
                "quantity": {
                  "type": "integer",
                  "example": 2
                },
                "priceAtPurchase": {
                  "type": "number",
                  "format": "float",
                  "example": 15.99
                }
              }
            }
          },
          "totalAmount": {
            "type": "number",
            "format": "float",
            "example": 31.98
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "processing",
              "shipped",
              "delivered",
              "cancelled"
            ],
            "example": "pending"
          },
          "shippingAddress": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string",
                "example": "123 Flower St"
              },
              "city": {
                "type": "string",
                "example": "Bloomtown"
              },
              "state": {
                "type": "string",
                "example": "CA"
              },
              "zipCode": {
                "type": "string",
                "example": "90210"
              },
              "country": {
                "type": "string",
                "example": "USA"
              }
            }
          },
          "orderDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  },
  "paths": {
    "/flowers": {
      "get": {
        "summary": "Get all flowers",
        "tags": [
          "Flowers"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            },
            "description": "Filter by category ID"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Search by flower name (case-insensitive)"
          },
          {
            "in": "query",
            "name": "minPrice",
            "schema": {
              "type": "number"
            },
            "description": "Filter by minimum price"
          },
          {
            "in": "query",
            "name": "maxPrice",
            "schema": {
              "type": "number"
            },
            "description": "Filter by maximum price"
          },
          {
            "in": "query",
            "name": "isFeatured",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by featured status (true/false)"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of flowers.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "count": {
                      "type": "integer",
                      "example": 10
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Flower"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new flower",
        "tags": [
          "Flowers"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "price",
                  "categoryId",
                  "stock"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Tulip"
                  },
                  "description": {
                    "type": "string",
                    "example": "Bright and cheerful spring flower"
                  },
                  "price": {
                    "type": "number",
                    "example": 12.99
                  },
                  "categoryId": {
                    "type": "string",
                    "description": "MongoDB ObjectId of the category",
                    "example": "665fcd123abc4567def890ab"
                  },
                  "imageUrl": {
                    "type": "string",
                    "example": "https://example.com/images/tulip.jpg"
                  },
                  "stock": {
                    "type": "integer",
                    "example": 20
                  },
                  "isFeatured": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Flower created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "666abc123def456ghi789jkl"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "price": {
                      "type": "number"
                    },
                    "category": {
                      "type": "string",
                      "description": "Populated category ID"
                    },
                    "imageUrl": {
                      "type": "string"
                    },
                    "stock": {
                      "type": "integer"
                    },
                    "isFeatured": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/flowers/{id}": {
      "get": {
        "summary": "Get a single flower by ID",
        "tags": [
          "Flowers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The flower ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Flower data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Flower"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Flower not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update a flower by ID",
        "tags": [
          "Flowers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "MongoDB ObjectId of the flower to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Rose"
                  },
                  "description": {
                    "type": "string",
                    "example": "Updated description for rose"
                  },
                  "price": {
                    "type": "number",
                    "example": 15.99
                  },
                  "categoryId": {
                    "type": "string",
                    "example": "665fcd123abc4567def890ab"
                  },
                  "imageUrl": {
                    "type": "string",
                    "example": "https://example.com/images/rose.jpg"
                  },
                  "stock": {
                    "type": "integer",
                    "example": 50
                  },
                  "isFeatured": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Flower updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "price": {
                      "type": "number"
                    },
                    "category": {
                      "type": "string"
                    },
                    "imageUrl": {
                      "type": "string"
                    },
                    "stock": {
                      "type": "integer"
                    },
                    "isFeatured": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Flower not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a flower by ID",
        "tags": [
          "Flowers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the flower to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Flower deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acknowledged": {
                      "type": "boolean",
                      "example": true
                    },
                    "deletedCount": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Flower not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/categories": {
      "get": {
        "summary": "Get all flower categories",
        "tags": [
          "Categories"
        ],
        "responses": {
          "200": {
            "description": "A list of categories.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "count": {
                      "type": "integer",
                      "example": 5
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Category"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new category",
        "tags": [
          "Categories"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "description"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Roses"
                  },
                  "description": {
                    "type": "string",
                    "example": "Fragrant and beautiful flowers"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "665fcd123abc4567def890ab"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "createAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "summary": "Get a single category by ID",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The category ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Category data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Category"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Category not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update a category by ID",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the category to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Updated Category Name"
                  },
                  "description": {
                    "type": "string",
                    "example": "Updated category description"
                  },
                  "createAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-06-06T14:30:00.000Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "createAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Category not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a category by ID",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the category to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acknowledged": {
                      "type": "boolean",
                      "example": true
                    },
                    "deletedCount": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Category not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Flowers",
      "description": "API for managing flower inventory"
    },
    {
      "name": "Categories",
      "description": "API for managing flower categories"
    }
  ]
}